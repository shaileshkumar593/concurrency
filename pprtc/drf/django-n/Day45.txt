The <form> Element
It defines a form that is used to collect user input. It is a paired tag.

Syntax:
<form> .........................</form>

Form Attributes:
1 method	 2 action	3 target 	4 enctype		

Input Fields Attributes and  Parameters
Attributes	Parameters
name		any name
value		any value
size		pixels
maxlength	number
rows		number
cols		number
readonly		true, false
disabled		disabled
checked		checked
multiple		true, false

<textarea> Tag Attributes
Multiline text box...!!
1 cols	 2 rows	 3 name	 

NOTE: Default rows are 2, columns are 20

Example:
<body>
<textarea rows=6 cols=20>
Naresh i technologies offering all software courses like QA Unix HTML Oracel Sqlserver Java .NET Sharepoint Testing Tools Android..
</textarea>

HTML <select> Tag
It is used to create a drop-down list. The <option> tags inside the <select> element define the available options in the list.  It is a paired tag.

Syntax:
<select>.......................</select>

Attributes
Attribute 	Value 	Description
disabled 	disabled 	Specifies that a drop-down list should be disabled
multiple 	multiple 	Specifies that multiple options can be selected at once
name 	name 	Defines a name for the drop-down list
size 	number 	Defines the number of visible options in a drop-down list

HTML <optgroup> Tag
It is used to group related options in a drop-down list. If you have a long list of options, groups of related options are easier to handle for a user. It is a paired tag.

Syntax:
<optgroup>.................................</optgroup> 

Attributes
Attribute 	Value 	Description
disabled 	disabled 	Specifies that an option-group should be disabled
label 	text 	Specifies a label for an option-group

HTML <option> Tag
It defines an option in a select list.  It is a paired tag.

Syntax
<option>....................................</option> 

Attributes
Attribute 	Value 	Description
disabled 	disabled 	Specifies that an option should be disabled
label 	text 	Specifies a shorter label for an option
selected 	selected 	Specifies that an option should be pre-selected when the page loads
value 	text 	Specifies the value to be sent to a server

Example:
<html>
<body>
<select>
<optgroup label="Swedish Cars">
<option value="volvo">Volvo</option>
<option value="saab">Saab</option>
</optgroup>
</select>
 </body>
</html>

List Box:
HTML <select> multiple Attribute
The multiple attribute is a boolean attribute. It specifies that multiple options can be selected at once.

Syntax
<select multiple> 

HTML <select> size Attribute
The size attribute specifies the number of visible options in a drop-down list.

Syntax
<select size="number">

Attribute Values
Value 	Description
number 	The number of visible options in the drop-down list. Default value is 1. If the 	multiple attribute is present, the default value is 4

Example:
<html>
<body>
<select size="3">
<option value="volvo">Volvo</option>
<option value="saab">Saab</option>
<option value="opel">Opel</option>
<option value="audi">Audi</option>
</select>
</body>
</html>

Radio Button Control
Radio buttons are used when out of many options, just one option is required to be selected. They are also created using HTML <input> tag but type attribute is set to radio.

Example:
<form>
<label>What is your favourites Web browser..!</label>
<input type="radio" name="browser" /> Internet Explorer 
<input type="radio" name="browser"  /> Google Chrome
<input type="radio" name="browser" /> Mozilla Firefox
</form>

Checkbox Control
Checkboxes are used when more than one option is required to be selected. They are also created using HTML <input> tag but type attribute is set to checkbox..

Example:
<form>
<label>Select your hobby...!!</label>
<input type="checkbox" name="cricket" /> Cricket 
<input type="checkbox" name="watchtv" /> Watch TV 
<input type="checkbox" name="playgame"  /> Play Game
<input type="checkbox" name="inserf"  /> Internet Browsing 
</form>

<fieldset>
It defines a group of form elements as being logically related. The browser draws a box around the set of fields to indicate that they are related. It is a paired tag.

Syntax: <fieldset>...................</fieldset>

Example:
<fieldset>
favorite area: <input name="favegame"><br>
<input type=checkbox name="cricket"> like cricket<br>
<input type=checkbox name="chess"> like chess<br>
<input type=checkbox name="java"> like software<br>
</fieldset><p>

<legend> 
It is used with <fieldset> to give a title to each set of fields. It is a paired tag.

Syntax: 
<legend>.............</legend>

Attributes 	 Parameters
align 		right, center, left

Example:
<FIELDSET>
<LEGEND>Personal Stuff</LEGEND><P>
name: <INPUT NAME="realname"><BR>
email: <INPUT NAME="email">
</FIELDSET>

Introduction HTTP:
It is designed to enable communications between clients and servers.HTTP works as a request-response protocol between a client and server. A web browser may be the client, and an application on a computer that hosts a web site may be the server.

HTTP Request Methods:
Two commonly used methods for a request-response between a client and server are: 
1 GET 
2 POST
    
Action Attribute:
This attribute is used to specify the URL of the server page to which we want to send our form data.

Syntax:
 <form name="myform" action="user.aspx">

i. get:-
In this method, we dont have security for our data and only limited data can be sent to the server page. This is the default method of the form. It can carry raw data from client to server
(rawdata ==> the data which is understandable to user)

Syntax:
<form  action="nit.html" method="get">

Example:
<body>
<form action="nit.html" method="get" name='myform'>
<label>User Name:</label> <br/>
<input type='text' name="user"><br/>
<label>Password:</label> <br/>
<input type="password" name="pass"><br/>
<input type="Submit" value="Sign-In">
<input type="reset" value="Cancel">
</form>
</body>

Some other notes on GET requests:
1 GET requests can be cached
2 GET requests remain in the browser history
3 GET requests can be bookmarked
4 GET requests should never be used when dealing with sensitive data
5 GET requests have length restrictions

The POST Method
In this method, we have security for our data and we can send bulk of data to the server. It can carry encrypted data from client to server page. (Encrypted means machine understandable format).

Syntax:
<form  method="post">

Example:
<body>
<form action="nit.html" method="post" name='myform'>
<label>User Name:</label> <br/>
<input type='text' name="user"><br/>
<label>Password:</label> <br/>
<input type="password" name="pass"><br/>
<input type="Submit" value="Sign-In">
<input type="reset" value="Cancel">
</form>
</body>

1 POST requests are never cached
2 POST requests do not remain in the browser history
3 POST requests cannot be bookmarked
4 POST requests have no restrictions on data length

Difference between GETand POST:
GET				POST
Data is visible on URL address	Not visible post information
Unsecured		   	highly secured
Excellent Peformance	   	Good Performance
Transfer limited amount of data    	TransferHugeAmountOfData
Unable to Upload file	    	We can Upload files
Can be cached			Not cached

HTTP Status Messages
1xx-199: Information
2xx-299: Successful
3xx-399: Redirection
4xx-499: Client Error
5xx-599: Server Error