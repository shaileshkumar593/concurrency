// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/repo/resource_action_repo.go

// Package mock_repo is a generated GoMock package.
package mock_repo

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	entity "github.com/syafdia/xaam/internal/domain/entity"
	reflect "reflect"
)

// MockPolicyRepo is a mock of PolicyRepo interface
type MockPolicyRepo struct {
	ctrl     *gomock.Controller
	recorder *MockPolicyRepoMockRecorder
}

// MockPolicyRepoMockRecorder is the mock recorder for MockPolicyRepo
type MockPolicyRepoMockRecorder struct {
	mock *MockPolicyRepo
}

// NewMockPolicyRepo creates a new mock instance
func NewMockPolicyRepo(ctrl *gomock.Controller) *MockPolicyRepo {
	mock := &MockPolicyRepo{ctrl: ctrl}
	mock.recorder = &MockPolicyRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPolicyRepo) EXPECT() *MockPolicyRepoMockRecorder {
	return m.recorder
}

// FindMultipleByIDandTargetType mocks base method
func (m *MockPolicyRepo) FindMultipleByIDandTargetType(ctx context.Context, targetID int64, targetType entity.TargetType) ([]entity.Action, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindMultipleByIDandTargetType", ctx, targetID, targetType)
	ret0, _ := ret[0].([]entity.Action)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindMultipleByIDandTargetType indicates an expected call of FindMultipleByIDandTargetType
func (mr *MockPolicyRepoMockRecorder) FindMultipleByIDandTargetType(ctx, targetID, targetType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindMultipleByIDandTargetType", reflect.TypeOf((*MockPolicyRepo)(nil).FindMultipleByIDandTargetType), ctx, targetID, targetType)
}
